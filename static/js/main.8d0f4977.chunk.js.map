{"version":3,"sources":["components/Navigation/components/Main/MainPage.js","components/Navigation/components/FavouritePage/FavouritePage.js","components/Navigation/NavigationBar.js","components/Dashboard/components/CurrentWeather/CurrentWeather.js","components/Dashboard/components/Forecast/Forecast.js","redux/constants.js","redux/actions.js","components/Dashboard/components/Button/ButtonSearch.js","components/Dashboard/components/AutoSearch/AutoSearch.js","components/Dashboard/components/Display/Display.js","components/Dashboard/Dashboard.js","components/Main.js","components/Dashboard/components/FavouriteCity/FavouriteCity.js","components/Message/Message.js","components/Favourite.js","App.js","reportWebVitals.js","redux/reducers/root.js","redux/reducers/index.js","redux/store.js","index.js","components/Dashboard/components/FavouriteCity/Styles/mystyle.module.css"],"names":["useStyles","makeStyles","link","textDecoration","title","fontSize","color","MainPage","classes","to","className","Grid","item","Typography","FavouritePage","root","justifyContent","flexWrap","marginRight","marginTop","marginLeft","display","mainRoot","toggle","NavigationBar","props","container","FormGroup","FormControlLabel","control","Switch","checked","onChange","handleChange","label","maxWidth","media","height","width","icon","divBtn","CurrentWeather","isToAddFavourite","useSelector","state","undefined","objCurrentWeather","xs","sm","Card","CardActionArea","CardMedia","image","CardContent","gutterBottom","typography","Button","onClick","addToFavorite","disabled","span","Forecast","arrayHeadlines","component","data","map","property","index","console","log","src","SET_CURRENT_WEATHER","SET_CURRENT_FORECAST","DELETE_CITY","CURRENT_SEARCH_CITY","IS_TO_ADD_FAVOURITE","IS_FAVOURITE_EMPTY","setCurrentWeather","type","actions","payload","setCurrentForecast","setCurrentSearchCity","setCityLocal","setIsToAddFavourite","setIsFavouriteEmpty","btn","background","ButtonSearch","variant","size","submit","validString","textField","form","autocompleteTag","marginBottom","div","AutoSearch","FormControl","Autocomplete","options","arrayCity","id","value","searchCity","getOptionLabel","option","onKeyUp","onKeyPress","onSave","renderInput","params","TextField","margin","Display","dispatch","useDispatch","useState","setArrayCity","setSearchCity","keySearch","setKeySearch","setIsValidString","currentSearchCityRedux","currentSearchCity","objCurrentWeatherRedux","currentWeather","renderForecastRedux","currentForecast","useEffect","defaultCity","tempURLToGetCurrentWeather","process","tempURLToGetForesast","requestCurrent","axios","get","requestForecast","all","then","spread","resultCurrentWeather","resultForecast","WeatherIcon","urlIcon","temp","push","WeatherText","Temperature","Metric","Value","Unit","result","DailyForecasts","IconTheme","Night","Icon","date","moment","utc","Date","format","temptureMin","Minimum","temptureMax","Maximum","newArrayForecast","i","Object","values","catch","err","isValidInput","inputUser","pattern","RegExp","test","userGetCity","userChoice","a","url","response","convertObjCityToArr","tempArrOfNameCity","length","e","cityName","preventDefault","stringSearchCity","urlCurrent","urlForecast","forecast","tempArrayCurrentCity","IconPhrase","target","res","Key","convert","event","newValue","sx","arr","ID","name","weather","tempture","window","localStorage","setItem","JSON","stringify","style","Dashboard","Main","btnsGrid","headline","fontFamily","FavouriteCity","objLocal","idToDelete","parseInt","attributes","getNamedItem","arrTemp","parse","getItem","splice","clear","styles","button4","button5","Alert","elevation","theme","spacing","button","backgroundColor","message","Message","React","open","setOpen","handleClose","reason","Snackbar","autoHideDuration","onClose","severity","fontFeight","lineHeight","textTransform","messageContainer","Favourite","setIsLocalStorage","localStorageArrayCity","isFavouriteEmpty","rootNav","grey","black","App","setChecked","prev","from","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","reducers","combineReducers","rootReducer","configureStore","createStore","composeWithDevTools","ReactDOM","render","StrictMode","store","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.8d0f4977.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport { Typography, Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    link: {\r\n        textDecoration: \"none\"\r\n    },\r\n    title: {\r\n        fontSize: \"20px\",\r\n        color: \"white\"\r\n    },\r\n\r\n});\r\nfunction MainPage() {\r\n    const classes = useStyles();\r\n    return (\r\n        <Link to=\"/\" className={classes.link}>\r\n            <Grid item>\r\n                <Typography className={classes.title}>\r\n                    Main\r\n                </Typography>\r\n            </Grid>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default MainPage\r\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport { Typography, Grid } from \"@material-ui/core\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    link: {\r\n        textDecoration: \"none\"\r\n    },\r\n    title: {\r\n        fontSize: \"20px\",\r\n        color: \"white\"\r\n    },\r\n\r\n});\r\nfunction FavouritePage() {\r\n    const classes = useStyles();\r\n    return (\r\n        <Link to=\"/favorite\" className={classes.link}>\r\n            <Grid item>\r\n                <Typography className={classes.title} >\r\n                    Favorite\r\n                </Typography>\r\n            </Grid>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default FavouritePage\r\n","import React from 'react'\r\nimport MainPage from './components/Main/MainPage'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FavouritePage from './components/FavouritePage/FavouritePage';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        justifyContent: \"flex-end\",\r\n        flexWrap: \"initial !important\"\r\n    },\r\n    item: {\r\n        marginRight: \"10px\",\r\n        marginTop: \"5px\"\r\n    },\r\n    title: {\r\n        fontSize: \"25px\",\r\n        marginLeft: \"10px\",\r\n        display: \"flex\",\r\n        color: \"white\"\r\n    },\r\n    mainRoot: {\r\n        flexWrap: \"initial\",\r\n        marginTop: \"10px\",\r\n    },\r\n    toggle: {\r\n        marginTop: \"0.3%\",\r\n        color: \"white\",\r\n\r\n    }\r\n\r\n});\r\nfunction NavigationBar(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid container className={classes.mainRoot} >\r\n            <Grid item >\r\n                <Typography className={classes.title}>\r\n                    WeatherApp\r\n                </Typography>\r\n            </Grid>\r\n            <Grid container className={classes.root}>\r\n                <Grid item className={classes.item}>\r\n                    <MainPage />\r\n                </Grid>\r\n\r\n                <Grid item className={classes.item}>\r\n                    <FavouritePage />\r\n                </Grid>\r\n                <Grid item className={classes.toggle}>\r\n                    <FormGroup>\r\n                        <FormControlLabel\r\n                            control={<Switch checked={props.checked} onChange={props.handleChange} />}\r\n                            label=\"Toggle\"\r\n                        />\r\n                    </FormGroup>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default NavigationBar\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport { Button, Grid } from '@material-ui/core';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useSelector } from 'react-redux';\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 320,\r\n        marginLeft: \"13.5%\",\r\n    },\r\n    media: {\r\n        height: 50,\r\n        width: 100,\r\n        marginTop: \"5%\"\r\n    },\r\n    link: {\r\n        textDecoration: \"none\"\r\n    },\r\n    icon: {\r\n        marginRight: \"5%\",\r\n        marginTop: \"2%\",\r\n        color: \"#ffee58\"\r\n    },\r\n    divBtn: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\"\r\n    }\r\n\r\n});\r\n\r\nfunction CurrentWeather(props) {\r\n    const classes = useStyles();\r\n    const isToAddFavourite = useSelector(state => {\r\n        return state.root.isToAddFavourite;\r\n    });\r\n    if (props.objCurrentWeather !== undefined) {\r\n        return (\r\n            <Grid item xs={12} sm={6}>\r\n\r\n                <Card className={classes.root} >\r\n                    <CardActionArea>\r\n                        {props.objCurrentWeather[1] ? (\r\n                            <CardMedia\r\n                                className={classes.media}\r\n                                image={props.objCurrentWeather[1]}\r\n                                title=\"Icon-Current Weather\"\r\n                            />\r\n                        ) : null}\r\n\r\n                        <CardContent>\r\n                            <Typography gutterBottom >\r\n                                <strong> Current City:</strong>\r\n                                <br></br>\r\n                                {props.objCurrentWeather[3]}\r\n                            </Typography>\r\n                            <Typography >\r\n                                <strong> Current Weather:</strong>\r\n                                <br></br>\r\n                                {props.objCurrentWeather[0]}\r\n\r\n                            </Typography>\r\n                            <Typography className={classes.typography}>\r\n                                <strong> Degree:</strong>\r\n                                <br></br>\r\n                                {props.objCurrentWeather[2]}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                    <Grid item className={classes.divBtn}>\r\n                        <Button onClick={props.addToFavorite} disabled={!isToAddFavourite ? false : true}>Add To Favorite</Button>\r\n                        {isToAddFavourite ? <FavoriteIcon className={classes.icon} /> : null}\r\n                    </Grid>\r\n                </Card>\r\n            </Grid >\r\n        )\r\n    }\r\n}\r\n\r\nexport default CurrentWeather\r\n","import { Typography } from '@material-ui/core'\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport { CardContent } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: \"85%\",\r\n        marginTop: \"5%\",\r\n\r\n    },\r\n    span: {\r\n        color: \"rgb(48, 111, 140)\",\r\n    }\r\n});\r\n\r\nfunction Forecast(props) {\r\n    const classes = useStyles();\r\n    const arrayHeadlines = ['Current Weather', 'Date', 'Min', 'Max'];\r\n    return (\r\n\r\n        <Card className={classes.root}>\r\n            <CardActionArea>\r\n                <CardContent>\r\n                    <Typography gutterBottom component=\"h2\">\r\n                        {props.data.map((property, index) => (\r\n                            <Typography key={index}>\r\n                                <strong>{arrayHeadlines[index] + \":\"}</strong>\r\n                                {console.log(property)}\r\n                                {index == 0 ? <img src={property} width=\"75\" height=\"45\" key={index}></img> : <span key={index} className={classes.span}>{property}</span>}\r\n                            </Typography>\r\n                        ))}\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Forecast\r\n\r\n\r\n\r\n","export const SET_CURRENT_WEATHER = 'SET_CURRENT_WEATHER';\r\nexport const SET_CURRENT_FORECAST = 'SET_CURRENT_FORECAST';\r\nexport const DELETE_CITY = 'DELETE_CITY ';\r\nexport const CURRENT_SEARCH_CITY = 'CURRENT_SEARCH_CITY';\r\nexport const IS_TO_ADD_FAVOURITE = 'IS_TO_ADD_FAVOURITE';\r\nexport const IS_FAVOURITE_EMPTY = 'IS_FAVOURITE_EMPTY';","import * as actions from './constants';\r\n\r\nexport const setCurrentWeather = data => {\r\n    return {\r\n        type: actions.SET_CURRENT_WEATHER,\r\n        payload: data\r\n    }\r\n}\r\nexport const setCurrentForecast = data => {\r\n    console.log(data);\r\n    return {\r\n        type: actions.SET_CURRENT_FORECAST,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const setCurrentSearchCity = data => {\r\n    return {\r\n        type: actions.CURRENT_SEARCH_CITY,\r\n        payload: data\r\n    }\r\n}\r\nexport const setCityLocal = data => {\r\n    return {\r\n        type: actions.DELETE_CITY,\r\n        payload: data\r\n    }\r\n}\r\nexport const setIsToAddFavourite = data => {\r\n    return {\r\n        type: actions.IS_TO_ADD_FAVOURITE,\r\n        payload: data\r\n    }\r\n}\r\nexport const setIsFavouriteEmpty = data => {\r\n    return {\r\n        type: actions.IS_FAVOURITE_EMPTY,\r\n        payload: data\r\n    }\r\n\r\n}\r\n","import React from 'react'\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles({\r\n    btn: {\r\n        background: \"white\"\r\n    }\r\n\r\n});\r\nfunction ButtonSearch(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid container justifyContent=\"center\">\r\n            <Grid item >\r\n                <Button variant=\"outlined\" color=\"primary\" size=\"large\" onClick={props.submit} className={classes.btn} disabled={props.validString ? true : false}>\r\n                    Submit\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n\r\n    )\r\n}\r\n\r\nexport default ButtonSearch\r\n","import React from 'react'\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport ButtonSearch from '../Button/ButtonSearch';\r\nimport { Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles({\r\n    textField: {\r\n        background: \"white\",\r\n    },\r\n    form: {\r\n        width: \"80%\"\r\n    },\r\n    autocompleteTag: {\r\n        marginBottom: \"2%\",\r\n        marginLeft: \"10%\"\r\n    },\r\n    div: {\r\n        marginTop: \"25px\"\r\n    }\r\n\r\n});\r\nfunction AutoSearch(props) {\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid container >\r\n            <Grid item xs={12} sm={10}>\r\n                <FormControl variant=\"outlined\" className={classes.form}>\r\n                    <Autocomplete\r\n                        options={props.arrayCity}\r\n                        id=\"controlled-demo\"\r\n                        value={props.searchCity}\r\n                        getOptionLabel={(option) => {\r\n                            return option;\r\n                        }}\r\n                        onKeyUp={props.onKeyPress}\r\n                        onChange={props.onSave}\r\n                        renderInput={(params) => <TextField {...params} margin=\"normal\" variant=\"outlined\" className={classes.textField} />}\r\n                        className={classes.autocompleteTag}\r\n                    />\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item xs sm={2} className={classes.div} >\r\n                <ButtonSearch submit={props.submit} validString={props.validString} />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default AutoSearch\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Grid } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from \"axios\";\r\nimport moment from 'moment';\r\nimport CurrentWeather from '../CurrentWeather/CurrentWeather';\r\nimport Forecast from '../Forecast/Forecast';\r\nimport * as actions from '../../../../redux/actions';\r\nimport AutoSearch from \"../AutoSearch/AutoSearch\";\r\n\r\nfunction Display() {\r\n    const dispatch = useDispatch();\r\n    const [arrayCity, setArrayCity] = useState([]);\r\n    const [searchCity, setSearchCity] = useState(\"\");\r\n    const [keySearch, setKeySearch] = useState();\r\n    const [validString, setIsValidString] = useState(true);\r\n    const currentSearchCityRedux = useSelector(state => {\r\n        return state.root.currentSearchCity;\r\n    });\r\n    const objCurrentWeatherRedux = useSelector(state => {\r\n        return state.root.currentWeather;\r\n    });\r\n    const renderForecastRedux = useSelector(state => {\r\n        return state.root.currentForecast;\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (currentSearchCityRedux) {\r\n            submit(null, currentSearchCityRedux);\r\n        } else {\r\n            defaultCity();\r\n        }\r\n\r\n    }, [])\r\n\r\n    const defaultCity = () => {\r\n        let tempURLToGetCurrentWeather = `http://dataservice.accuweather.com/currentconditions/v1/${process.env.REACT_APP_ID_SEARCH}?apikey=${process.env.REACT_APP_KEY3}`;\r\n        let tempURLToGetForesast = `http://dataservice.accuweather.com/forecasts/v1/daily/5day/${process.env.REACT_APP_ID_SEARCH}?apikey=${process.env.REACT_APP_KEY3}`;\r\n        const requestCurrent = axios.get(tempURLToGetCurrentWeather);\r\n        const requestForecast = axios.get(tempURLToGetForesast);\r\n        axios.all([requestCurrent, requestForecast]).then(axios.spread((...response) => {\r\n\r\n            const resultCurrentWeather = response[0];\r\n            const resultForecast = response[1];\r\n            if (resultCurrentWeather.data[0].WeatherIcon < 10) {\r\n                resultCurrentWeather.data[0].WeatherIcon = `0${resultCurrentWeather.data[0].WeatherIcon}`;\r\n            }\r\n            let urlIcon = `https://developer.accuweather.com/sites/default/files/${resultCurrentWeather.data[0].WeatherIcon}-s.png`;\r\n            let temp = [];\r\n            temp.push(resultCurrentWeather.data[0].WeatherText);\r\n            temp.push(urlIcon);\r\n            temp.push(resultCurrentWeather.data[0].Temperature.Metric.Value + resultCurrentWeather.data[0].Temperature.Metric.Unit);\r\n            temp.push(\"Tel Aviv\");\r\n            dispatch(actions.setCurrentWeather([...temp]));\r\n            const result = resultForecast.data.DailyForecasts.map((data) => {\r\n                return {\r\n                    IconTheme: `https://developer.accuweather.com/sites/default/files/${data.Night.Icon < 10 ? '0' + data.Night.Icon : data.Night.Icon}-s.png`,\r\n                    date: moment.utc(data.Date).format('MMMM Do YYYY'),\r\n                    temptureMin: data.Temperature.Minimum.Value + data.Temperature.Minimum.Unit,\r\n                    temptureMax: data.Temperature.Maximum.Value + \" \" + data.Temperature.Maximum.Unit,\r\n                };\r\n            });\r\n            let newArrayForecast = [];\r\n            for (let i = 0; i < 5; i++) {\r\n                newArrayForecast[i] = (Object.values(result[i]));\r\n            }\r\n            dispatch(actions.setCurrentForecast([...newArrayForecast]))\r\n        })).catch(err => console.log(err));\r\n\r\n\r\n    }\r\n    const onKeyPress = (e) => {\r\n        setSearchCity(e.target.value);\r\n        const userChoice = e.target.value;\r\n        setIsValidString(true);\r\n        if (userChoice.length > 1) {\r\n            const isValid = isValidInput(userChoice);\r\n            if (isValid) {\r\n                setIsValidString(false);\r\n                userGetCity(userChoice).then(res => {\r\n                    let arrayCity = [];\r\n                    setKeySearch(res.data[0].Key);\r\n                    const convert = convertObjCityToArr(res);\r\n                    arrayCity = [...convert];\r\n                    setArrayCity([...arrayCity]);\r\n                }).catch(err => console.log(err));\r\n            } else {\r\n                setIsValidString(true);\r\n            }\r\n        }\r\n    };\r\n\r\n    const isValidInput = (inputUser) => {\r\n        var pattern = new RegExp(/^[a-zA-Z0-9- ]*$/);\r\n        var hasNumber = /\\d/;\r\n        if (inputUser === \"\" || hasNumber.test(inputUser) || !pattern.test(inputUser)) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n    const userGetCity = async (userChoice) => {\r\n        const url = `http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${process.env.REACT_APP_KEY3}&q=${userChoice}`;\r\n        const response = await axios(url);\r\n        return response;\r\n    }\r\n    const convertObjCityToArr = (data) => {\r\n        let result = [];\r\n        let tempArrOfNameCity = [];\r\n        for (let i = 0; i < data.data.length; i++) {\r\n            result[i] = (Object.values(data.data[i]));\r\n        }\r\n        for (let i = 0; i < result.length; i++) {\r\n            tempArrOfNameCity[i] = result[i][4];\r\n        }\r\n        return tempArrOfNameCity;\r\n    }\r\n\r\n    const submit = (e, cityName = \"\") => {\r\n        if (e) {\r\n            e.preventDefault();\r\n        }\r\n        let stringSearchCity = searchCity;\r\n        if (cityName) {\r\n            stringSearchCity = cityName;\r\n\r\n        }\r\n        dispatch(actions.setCurrentSearchCity(stringSearchCity));\r\n        const urlCurrent = `http://dataservice.accuweather.com/currentconditions/v1/${keySearch}?apikey=${process.env.REACT_APP_KEY3}`;\r\n        const urlForecast = `http://dataservice.accuweather.com/forecasts/v1/daily/5day/${keySearch}?apikey=${process.env.REACT_APP_KEY3}`;\r\n        const currentWeather = axios.get(urlCurrent);\r\n        const forecast = axios.get(urlForecast);\r\n        axios.all([currentWeather, forecast]).then(axios.spread((...response) => {\r\n            const resultCurrentWeather = response[0];\r\n            const resultForecast = response[1];\r\n\r\n            if (resultCurrentWeather.data[0].WeatherIcon < 10) {\r\n                resultCurrentWeather.data[0].WeatherIcon = `0${resultCurrentWeather.data[0].WeatherIcon}`;\r\n            }\r\n            let urlIcon = `https://developer.accuweather.com/sites/default/files/${resultCurrentWeather.data[0].WeatherIcon}-s.png`;\r\n            let tempArrayCurrentCity = [];\r\n            tempArrayCurrentCity.push(resultCurrentWeather.data[0].WeatherText);\r\n            tempArrayCurrentCity.push(urlIcon);\r\n            tempArrayCurrentCity.push(resultCurrentWeather.data[0].Temperature.Metric.Value + resultCurrentWeather.data[0].Temperature.Metric.Unit);\r\n            tempArrayCurrentCity.push(stringSearchCity);\r\n            dispatch(actions.setCurrentWeather([...tempArrayCurrentCity]));\r\n            const result = resultForecast.data.DailyForecasts.map((data) => {\r\n                return {\r\n                    IconPhrase: `https://developer.accuweather.com/sites/default/files/${data.Night.Icon < 10 ? '0' + data.Night.Icon : data.Night.Icon}-s.png`,\r\n                    date: moment.utc(data.Date).format('MMMM Do YYYY'),\r\n                    temptureMin: data.Temperature.Minimum.Value + data.Temperature.Minimum.Unit,\r\n                    temptureMax: data.Temperature.Maximum.Value + \" \" + data.Temperature.Maximum.Unit,\r\n\r\n                };\r\n            });\r\n            let newArrayForecast = [];\r\n            for (let i = 0; i < 5; i++) {\r\n                newArrayForecast[i] = (Object.values(result[i]));\r\n            }\r\n\r\n            dispatch(actions.setCurrentForecast([...newArrayForecast]));\r\n            if (searchCity !== \"\") {\r\n                setSearchCity(\"\");\r\n                setIsValidString(true);\r\n            }\r\n\r\n        })).catch(err => console.log(err));\r\n\r\n    };\r\n    const onSave = (event, newValue) => {\r\n        setSearchCity(newValue);\r\n    };\r\n\r\n    const addToFavorite = (e) => {\r\n        e.preventDefault();\r\n        let arr = [];\r\n        arr.push({\r\n            ID: keySearch,\r\n            name: currentSearchCityRedux ? currentSearchCityRedux : objCurrentWeatherRedux[3],\r\n            weather: objCurrentWeatherRedux[0],\r\n            tempture: objCurrentWeatherRedux[2]\r\n        });\r\n        dispatch(actions.setCityLocal([...arr]));\r\n        dispatch(actions.setIsToAddFavourite(true));\r\n        window.localStorage.setItem(\"city\", JSON.stringify([...arr]));\r\n    }\r\n    return (\r\n\r\n        <Grid container >\r\n            <AutoSearch arrayCity={arrayCity} searchCity={searchCity} onKeyPress={onKeyPress} onSave={onSave} submit={submit} validString={validString} />\r\n\r\n            <Grid container justifyContent=\"center\">\r\n                <Grid item sx={12} sm={12}>\r\n                    {<CurrentWeather objCurrentWeather={objCurrentWeatherRedux} addToFavorite={addToFavorite} />}\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container justifyContent=\"center\">\r\n                {renderForecastRedux != undefined ? renderForecastRedux.map((data, index) => (\r\n                    <Grid item xs={4} sm={2} style={{ marginLeft: \"1%\" }} key={index}>\r\n                        <Forecast data={data} key={index} />\r\n                    </Grid>\r\n                )) : null}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Display\r\n\r\n\r\n\r\n\r\n","import { Grid } from '@material-ui/core'\r\nimport React from 'react'\r\nimport Display from './components/Display/Display';\r\n\r\nfunction Dashboard() {\r\n    return (\r\n        <Grid container >\r\n            <Grid item xs>\r\n                <Display />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import { Grid } from '@material-ui/core'\r\nimport React from 'react'\r\nimport Dashboard from './Dashboard/Dashboard';\r\n\r\nfunction Main() {\r\n\r\n    return (\r\n        <Grid container justifyContent=\"center\">\r\n            <Grid item>\r\n                <Dashboard />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport { Grid } from '@material-ui/core';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as actions from '../../../../redux/actions';\r\nimport styles from \"./Styles/mystyle.module.css\";\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 320,\r\n        marginLeft: \"13.5%\",\r\n        marginTop: \"10%\",\r\n\r\n    },\r\n    link: {\r\n        textDecoration: \"none\"\r\n    },\r\n    btnsGrid: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\"\r\n    },\r\n    btn: {\r\n        marginLeft: \"2%\",\r\n    },\r\n    headline: {\r\n        fontSize: \"20px\",\r\n        fontFamily: \"serif\"\r\n    },\r\n    typography: {\r\n        fontFamily: \"serif\",\r\n        fontSize: \"17px\"\r\n    }\r\n\r\n});\r\n\r\nfunction FavouriteCity(props) {\r\n\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const deleteCity = (e) => {\r\n        e.preventDefault();\r\n        const idToDelete = parseInt(e.target.attributes.getNamedItem(\"data-id\").value);\r\n        let arrTemp = JSON.parse(window.localStorage.getItem(\"city\"));\r\n        arrTemp.splice(idToDelete, 1);\r\n        localStorage.clear();\r\n        window.localStorage.setItem(\"city\", JSON.stringify(arrTemp));\r\n        dispatch(actions.setCityLocal([...arrTemp]));\r\n        dispatch(actions.setIsToAddFavourite(false));\r\n        dispatch(actions.setIsFavouriteEmpty(false));\r\n\r\n    }\r\n\r\n    const setCity = () => {\r\n        dispatch(actions.setCurrentSearchCity(props.objLocal.name));\r\n    }\r\n\r\n    return (\r\n        <Grid item xs={12} sm={6}>\r\n            <Card className={classes.root}>\r\n                <CardActionArea>\r\n                    <CardContent >\r\n                        <Typography gutterBottom className={classes.headline} >\r\n                            <strong> Current City:</strong>\r\n                            <Typography >\r\n                                {props.objLocal.name}\r\n                            </Typography>\r\n                        </Typography>\r\n                        <Typography className={classes.typography}>\r\n                            <strong> Current Weather:</strong><Typography>\r\n                                {props.objLocal.weather}\r\n                            </Typography>\r\n                        </Typography>\r\n                        <Typography className={classes.typography}>\r\n                            <strong> Degree:</strong>\r\n                            <Typography>\r\n                                {props.objLocal.tempture}\r\n                            </Typography>\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n                <Grid item className={classes.btnsGrid}>\r\n                    <button onClick={deleteCity} data-id={props.index} className={styles.button4}>Delete</button>\r\n                    <Link to=\"/\" className={classes.link} >\r\n                        <button onClick={setCity} className={styles.button5}>Main Page</button>\r\n                    </Link>\r\n                </Grid>\r\n            </Card>\r\n        </Grid >\r\n    )\r\n}\r\n\r\nexport default FavouriteCity\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n\r\n    },\r\n    button: {\r\n        backgroundColor: \"#2196F3\",\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n            color: '#3c52b2',\r\n        }\r\n    },\r\n    message: {\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n            color: '#3c52b2',\r\n        }\r\n    }\r\n}));\r\nfunction Message() {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Button variant=\"outlined\" onClick={handleClick} className={classes.button}>\r\n                Open Notification\r\n            </Button>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"success\">\r\n                    No Data to Display\r\n                </Alert>\r\n            </Snackbar>\r\n            <Alert severity=\"info\" className={classes.message}>This is an information message! </Alert>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message\r\n","import React, { useEffect, useState } from 'react'\r\nimport FavouriteCity from './Dashboard/components/FavouriteCity/FavouriteCity';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as actions from '../redux/actions';\r\nimport Message from './Message/Message';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        marginTop: \"2%\"\r\n    },\r\n    title: {\r\n        color: \"#306F8C\",\r\n        fontFamily: 'Raleway',\r\n        fontSize: \"58px\",\r\n        fontFeight: \"800\",\r\n        lineHeight: \"72px\",\r\n        margin: \"0 0 24px\",\r\n        textTransform: \"uppercase\"\r\n    },\r\n    div: {\r\n        marginTop: \"5%\",\r\n        justifyContent: \"none\",\r\n        display: \"flex\"\r\n    },\r\n    messageContainer: {\r\n        justifyContent: \"center\"\r\n    },\r\n    message: {\r\n        marginTop: \"10%\"\r\n    }\r\n\r\n});\r\nfunction Favourite() {\r\n\r\n    const classes = useStyles();\r\n    const [isLocalStorage, setIsLocalStorage] = useState(false);\r\n    const localStorageArrayCity = useSelector(state => {\r\n        return state.root.localStorageArrayCity;\r\n    });\r\n\r\n    const isFavouriteEmpty = useSelector(state => {\r\n        return state.root.isFavouriteEmpty;\r\n    });\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n\r\n        if (localStorage.length > 0) {\r\n            setIsLocalStorage(true);\r\n            dispatch(actions.setCityLocal(JSON.parse(window.localStorage.getItem(\"city\"))));\r\n            dispatch(actions.setIsFavouriteEmpty(true));\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid container justifyContent=\"center\" className={classes.root}>\r\n                <Grid item >\r\n                    <Typography variant=\"h4\" color=\"primary\" className={classes.title}>\r\n                        Welcome to Favourite Page\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            {isFavouriteEmpty ? localStorageArrayCity.map((objLocal, index) => (\r\n                <Grid item xs={4} sm={6} className={classes.div}>\r\n                    <FavouriteCity objLocal={objLocal} index={index} /> </Grid>\r\n            )) : <Grid container className={classes.messageContainer}>\r\n                <Grid item className={classes.message} sx={12} sm={6}>\r\n                    <Typography>\r\n                        <Message />\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Favourite\r\n","import { Grid } from \"@material-ui/core\";\nimport { BrowserRouter as Router, Route, Switch as SwitchRouter, Redirect } from \"react-router-dom\";\nimport NavigationBar from \"./components/Navigation/NavigationBar\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Main from \"./components/Main\";\nimport Favourite from \"./components/Favourite\";\nimport React, { useState } from 'react'\nimport \"./App.css\";\n\nconst useStyles = makeStyles({\n  rootNav: {\n    backgroundColor: \"#306F8C\",\n  },\n  grey: {\n    backgroundColor: \"#e3e3e3\",\n    height: \"110vh\",\n  },\n  black: {\n    backgroundColor: \"black\",\n    height: \"110vh\",\n  }\n});\n\nfunction App() {\n\n  const classes = useStyles();\n  const [checked, setChecked] = useState(false);\n\n  const handleChange = () => {\n    setChecked((prev) => !prev);\n  };\n\n  return (\n    <div className=\"App\" >\n      <div className={!checked ? classes.grey : classes.black} >\n        <Grid item xs={12} >\n          <Router>\n            <Grid container className={classes.rootNav} >\n              <NavigationBar handleChange={handleChange} checked={checked} />\n            </Grid>\n            <SwitchRouter>\n              <Redirect from=\"/Philip-Kouchner-07-20-2021\" to=\"/\" />\n              <Route exact path=\"/\">\n                <Main />\n              </Route>\n              <Route path=\"/favorite\">\n                <Favourite />\n              </Route>\n            </SwitchRouter>\n          </Router>\n        </Grid>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actions from '../constants';\r\n\r\nconst initialState = {\r\n    currentWeather: [],\r\n    currentForecast: [],\r\n    localStorageArrayCity: [],\r\n    currentSearchCity: \"\",\r\n    isToAddFavourite: false,\r\n    isFavouriteEmpty: false,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actions.SET_CURRENT_WEATHER: {\r\n            return {\r\n                ...state,\r\n                currentWeather: action.payload\r\n            }\r\n\r\n        }\r\n        case actions.SET_CURRENT_FORECAST: {\r\n            return {\r\n                ...state,\r\n                currentForecast: action.payload\r\n            }\r\n\r\n        }\r\n        case actions.DELETE_CITY: {\r\n            return {\r\n                ...state,\r\n                localStorageArrayCity: action.payload\r\n            }\r\n\r\n        }\r\n        case actions.CURRENT_SEARCH_CITY: {\r\n            return {\r\n                ...state,\r\n                currentSearchCity: action.payload\r\n            }\r\n\r\n        }\r\n        case actions.IS_TO_ADD_FAVOURITE: {\r\n            return {\r\n                ...state,\r\n                isToAddFavourite: action.payload\r\n            }\r\n\r\n        }\r\n        case actions.IS_FAVOURITE_EMPTY: {\r\n            return {\r\n                ...state,\r\n                isFavouriteEmpty: action.payload\r\n            }\r\n\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import { combineReducers } from 'redux';\r\nimport rootReducer from './root';\r\n// import userReducer from './user';\r\n\r\nconst reducers = combineReducers({\r\n    root: rootReducer,\r\n    // user: userReducer\r\n});\r\n\r\nexport default reducers;","import { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport reducers from './reducers';\r\n\r\nconst configureStore = () => {\r\n    const store = createStore(reducers, composeWithDevTools());\r\n    return store;\r\n}\r\n\r\nexport default configureStore();","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button4\":\"mystyle_button4__1FvLe\",\"button5\":\"mystyle_button5__xm9VY\"};"],"sourceRoot":""}