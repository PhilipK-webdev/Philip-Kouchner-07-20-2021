{"version":3,"sources":["components/Navigation/components/Main/MainPage.js","components/Navigation/components/FavouritePage/FavouritePage.js","components/Navigation/NavigationBar.js","components/Dashboard/components/CurrentWeather/CurrentWeather.js","components/Dashboard/components/Forecast/Forecast.js","redux/constants.js","redux/actions.js","components/Dashboard/components/Button/ButtonSearch.js","components/Dashboard/components/AutoSearch/AutoSearch.js","components/Dashboard/components/Display/Display.js","components/Dashboard/Dashboard.js","components/Main.js","components/Dashboard/components/FavouriteCity/FavouriteCity.js","components/Favourite.js","App.js","reportWebVitals.js","redux/reducers/root.js","redux/reducers/index.js","redux/store.js","index.js","components/Dashboard/components/FavouriteCity/Styles/mystyle.module.css"],"names":["useStyles","makeStyles","link","textDecoration","title","fontSize","color","MainPage","classes","to","className","Grid","item","Typography","FavouritePage","root","justifyContent","flexWrap","marginRight","marginTop","marginLeft","display","mainRoot","toggle","NavigationBar","props","container","FormGroup","FormControlLabel","control","Switch","checked","onChange","handleChange","label","maxWidth","media","height","width","icon","divBtn","CurrentWeather","isToAddFavourite","useSelector","state","undefined","objCurrentWeather","xs","sm","Card","CardActionArea","CardMedia","image","CardContent","gutterBottom","typography","Button","onClick","addToFavorite","span","Forecast","arrayHeadlines","component","data","map","property","index","src","SET_CURRENT_WEATHER","SET_CURRENT_FORECAST","DELETE_CITY","CURRENT_SEARCH_CITY","IS_TO_ADD_FAVOURITE","SET_KEY_SEARCH","setCurrentWeather","type","actions","payload","setCurrentForecast","console","log","setCurrentSearchCity","setCityLocal","setIsToAddFavourite","setKeySearch","btn","background","ButtonSearch","variant","size","submit","disabled","validString","textField","form","autocompleteTag","marginBottom","div","AutoSearch","FormControl","Autocomplete","options","arrayCity","id","value","searchCity","getOptionLabel","option","onKeyUp","onKeyPress","onSave","renderInput","params","TextField","margin","Display","dispatch","useDispatch","REACT_APP_ID_SEARCH","REACT_APP_KEY","useState","setArrayCity","setSearchCity","keySearch","setIsValidString","arrToFav","setArrToFav","currentSearchCityRedux","currentSearchCity","objCurrentWeatherRedux","currentWeather","renderForecastRedux","currentForecast","userKeySearch","useEffect","localStorage","length","tempCity","JSON","parse","window","getItem","defaultCity","tempURLToGetCurrentWeather","tempURLToGetForesast","requestCurrent","axios","get","requestForecast","getAllData","isValidInput","inputUser","pattern","RegExp","test","userGetCity","userChoice","a","url","response","convertObjCityToArr","result","tempArrOfNameCity","i","Object","values","e","cityName","preventDefault","stringSearchCity","urlCurrent","parseInt","urlForecast","forecast","stringCity","all","then","spread","resultCurrentWeather","resultForecast","WeatherIcon","urlIcon","tempArrayCurrentCity","push","WeatherText","Temperature","Metric","Value","Unit","DailyForecasts","IconPhrase","Night","Icon","date","moment","utc","Date","format","temptureMin","Minimum","temptureMax","Maximum","newArrayForecast","catch","err","target","res","Key","convert","event","newValue","sx","Weather","ID","name","weather","tempture","setItem","stringify","style","Dashboard","Main","btnsGrid","headline","fontFamily","FavouriteCity","objLocal","idToDelete","attributes","getNamedItem","arrTemp","splice","styles","button4","button5","fontFeight","lineHeight","textTransform","messageContainer","message","Favourite","localStorageArrayCity","rootNav","backgroundColor","grey","black","App","setChecked","prev","from","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","reducers","combineReducers","rootReducer","configureStore","createStore","composeWithDevTools","ReactDOM","render","StrictMode","store","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d69b5445.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport { Typography, Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    link: {\r\n        textDecoration: \"none\"\r\n    },\r\n    title: {\r\n        fontSize: \"20px\",\r\n        color: \"white\"\r\n    },\r\n\r\n});\r\nfunction MainPage() {\r\n    const classes = useStyles();\r\n    return (\r\n        <Link to=\"/\" className={classes.link}>\r\n            <Grid item>\r\n                <Typography className={classes.title}>\r\n                    Main\r\n                </Typography>\r\n            </Grid>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default MainPage\r\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport { Typography, Grid } from \"@material-ui/core\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    link: {\r\n        textDecoration: \"none\"\r\n    },\r\n    title: {\r\n        fontSize: \"20px\",\r\n        color: \"white\"\r\n    },\r\n\r\n});\r\nfunction FavouritePage() {\r\n    const classes = useStyles();\r\n    return (\r\n        <Link to=\"/favorite\" className={classes.link}>\r\n            <Grid item>\r\n                <Typography className={classes.title} >\r\n                    Favorite\r\n                </Typography>\r\n            </Grid>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default FavouritePage\r\n","import React from 'react'\r\nimport MainPage from './components/Main/MainPage'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FavouritePage from './components/FavouritePage/FavouritePage';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        justifyContent: \"flex-end\",\r\n        flexWrap: \"initial !important\"\r\n    },\r\n    item: {\r\n        marginRight: \"10px\",\r\n        marginTop: \"5px\"\r\n    },\r\n    title: {\r\n        fontSize: \"25px\",\r\n        marginLeft: \"10px\",\r\n        display: \"flex\",\r\n        color: \"white\"\r\n    },\r\n    mainRoot: {\r\n        flexWrap: \"initial\",\r\n        marginTop: \"10px\",\r\n    },\r\n    toggle: {\r\n        marginTop: \"0.3%\",\r\n        color: \"white\",\r\n\r\n    }\r\n\r\n});\r\nfunction NavigationBar(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid container className={classes.mainRoot} >\r\n            <Grid item >\r\n                <Typography className={classes.title}>\r\n                    WeatherApp\r\n                </Typography>\r\n            </Grid>\r\n            <Grid container className={classes.root}>\r\n                <Grid item className={classes.item}>\r\n                    <MainPage />\r\n                </Grid>\r\n\r\n                <Grid item className={classes.item}>\r\n                    <FavouritePage />\r\n                </Grid>\r\n                <Grid item className={classes.toggle}>\r\n                    <FormGroup>\r\n                        <FormControlLabel\r\n                            control={<Switch checked={props.checked} onChange={props.handleChange} />}\r\n                            label=\"Toggle\"\r\n                        />\r\n                    </FormGroup>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default NavigationBar\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport { Button, Grid } from '@material-ui/core';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useSelector } from 'react-redux';\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 320,\r\n        marginLeft: \"13.5%\",\r\n    },\r\n    media: {\r\n        height: 50,\r\n        width: 100,\r\n        marginTop: \"5%\"\r\n    },\r\n    link: {\r\n        textDecoration: \"none\"\r\n    },\r\n    icon: {\r\n        marginRight: \"5%\",\r\n        marginTop: \"2%\",\r\n        color: \"#ffee58\"\r\n    },\r\n    divBtn: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\"\r\n    }\r\n\r\n});\r\n\r\nfunction CurrentWeather(props) {\r\n    const classes = useStyles();\r\n    const isToAddFavourite = useSelector(state => {\r\n        return state.root.isToAddFavourite;\r\n    });\r\n\r\n    if (props.objCurrentWeather !== undefined) {\r\n        return (\r\n            <Grid item xs={12} sm={6}>\r\n                <Card className={classes.root} >\r\n                    <CardActionArea>\r\n                        {props.objCurrentWeather[1] ? (\r\n                            <CardMedia\r\n                                className={classes.media}\r\n                                image={props.objCurrentWeather[1]}\r\n                                title=\"Icon-Current Weather\"\r\n                            />\r\n                        ) : null}\r\n\r\n                        <CardContent>\r\n                            <Typography gutterBottom >\r\n                                <strong> Current City:</strong>\r\n                                <br></br>\r\n                                {props.objCurrentWeather[3]}\r\n                            </Typography>\r\n                            <Typography >\r\n                                <strong> Current Weather:</strong>\r\n                                <br></br>\r\n                                {props.objCurrentWeather[0]}\r\n\r\n                            </Typography>\r\n                            <Typography className={classes.typography}>\r\n                                <strong> Degree:</strong>\r\n                                <br></br>\r\n                                {props.objCurrentWeather[2]}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                    <Grid item className={classes.divBtn}>\r\n                        {isToAddFavourite ? <FavoriteIcon className={classes.icon} /> : null}\r\n                        <Button onClick={props.addToFavorite} >Add To Favorite</Button>\r\n                    </Grid>\r\n                </Card>\r\n            </Grid >\r\n        )\r\n    }\r\n}\r\n\r\nexport default CurrentWeather\r\n","import { Typography } from '@material-ui/core'\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport { CardContent } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: \"90%\",\r\n        marginTop: \"5%\",\r\n\r\n    },\r\n    span: {\r\n        color: \"rgb(48, 111, 140)\",\r\n    }\r\n});\r\n\r\nfunction Forecast(props) {\r\n    const classes = useStyles();\r\n    const arrayHeadlines = ['Current Weather', 'Date', 'Min', 'Max'];\r\n    return (\r\n\r\n        <Card className={classes.root}>\r\n            <CardActionArea>\r\n                <CardContent>\r\n                    <Typography gutterBottom component=\"h2\">\r\n                        {props.data.map((property, index) => (\r\n                            <Typography key={index}>\r\n                                <strong>{arrayHeadlines[index] + \":\"}</strong>\r\n                                {index == 0 ? <img src={property} width=\"75\" height=\"45\" key={index}></img> : <span key={index} className={classes.span}>{property}</span>}\r\n                            </Typography>\r\n                        ))}\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Forecast\r\n\r\n\r\n\r\n","export const SET_CURRENT_WEATHER = 'SET_CURRENT_WEATHER';\r\nexport const SET_CURRENT_FORECAST = 'SET_CURRENT_FORECAST';\r\nexport const DELETE_CITY = 'DELETE_CITY ';\r\nexport const CURRENT_SEARCH_CITY = 'CURRENT_SEARCH_CITY';\r\nexport const IS_TO_ADD_FAVOURITE = 'IS_TO_ADD_FAVOURITE';\r\nexport const SET_KEY_SEARCH = 'SET_KEY_SEARCH';","import * as actions from './constants';\r\n\r\nexport const setCurrentWeather = data => {\r\n    return {\r\n        type: actions.SET_CURRENT_WEATHER,\r\n        payload: data\r\n    }\r\n}\r\nexport const setCurrentForecast = data => {\r\n    console.log(data);\r\n    return {\r\n        type: actions.SET_CURRENT_FORECAST,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const setCurrentSearchCity = data => {\r\n    return {\r\n        type: actions.CURRENT_SEARCH_CITY,\r\n        payload: data\r\n    }\r\n}\r\nexport const setCityLocal = data => {\r\n    return {\r\n        type: actions.DELETE_CITY,\r\n        payload: data\r\n    }\r\n}\r\nexport const setIsToAddFavourite = data => {\r\n    return {\r\n        type: actions.IS_TO_ADD_FAVOURITE,\r\n        payload: data\r\n    }\r\n}\r\nexport const setKeySearch = data => {\r\n    return {\r\n        type: actions.SET_KEY_SEARCH,\r\n        payload: data\r\n    }\r\n\r\n}\r\n","import React from 'react'\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles({\r\n    btn: {\r\n        background: \"white\"\r\n    }\r\n\r\n});\r\nfunction ButtonSearch(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid container justifyContent=\"center\">\r\n            <Grid item >\r\n                <Button variant=\"outlined\" color=\"primary\" size=\"large\" onClick={props.submit} className={classes.btn} disabled={props.validString ? true : false}>\r\n                    Submit\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n\r\n    )\r\n}\r\n\r\nexport default ButtonSearch\r\n","import React from 'react'\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport ButtonSearch from '../Button/ButtonSearch';\r\nimport { Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles({\r\n    textField: {\r\n        background: \"white\",\r\n    },\r\n    form: {\r\n        width: \"80%\"\r\n    },\r\n    autocompleteTag: {\r\n        marginBottom: \"2%\",\r\n        marginLeft: \"10%\"\r\n    },\r\n    div: {\r\n        marginTop: \"25px\"\r\n    }\r\n\r\n});\r\nfunction AutoSearch(props) {\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid container >\r\n            <Grid item xs={12} sm={10}>\r\n                <FormControl variant=\"outlined\" className={classes.form}>\r\n                    <Autocomplete\r\n                        options={props.arrayCity}\r\n                        id=\"controlled-demo\"\r\n                        value={props.searchCity}\r\n                        getOptionLabel={(option) => {\r\n                            return option;\r\n                        }}\r\n                        onKeyUp={props.onKeyPress}\r\n                        onChange={props.onSave}\r\n                        renderInput={(params) => <TextField {...params} margin=\"normal\" variant=\"outlined\" className={classes.textField} />}\r\n                        className={classes.autocompleteTag}\r\n                    />\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item xs sm={2} className={classes.div} >\r\n                <ButtonSearch submit={props.submit} validString={props.validString} />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default AutoSearch\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Grid } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from \"axios\";\r\nimport moment from 'moment';\r\nimport CurrentWeather from '../CurrentWeather/CurrentWeather';\r\nimport Forecast from '../Forecast/Forecast';\r\nimport * as actions from '../../../../redux/actions';\r\nimport AutoSearch from \"../AutoSearch/AutoSearch\";\r\n\r\nfunction Display() {\r\n    const dispatch = useDispatch();\r\n    const REACT_APP_ID_SEARCH = 215854;\r\n    // const REACT_APP_KEY = \"Uk0bwbjCauPfqnSGqo4xvT3CNMBOTsGQ\";\r\n    // const REACT_APP_KEY = \"EuEbNNQEOigJwGGuEZrKkcWZMKNnbrHG\";\r\n    // const REACT_APP_KEY = \"SQnTJZFegfmMybB5joP0NGbqxZj3M0z1\";\r\n    const REACT_APP_KEY = \"xq5R70tqcmEqsSlGezfLDjWWlr6AzwG2\";\r\n    const [arrayCity, setArrayCity] = useState([]);\r\n    const [searchCity, setSearchCity] = useState(\"\");\r\n    const [keySearch, setKeySearch] = useState();\r\n    const [validString, setIsValidString] = useState(true);\r\n    const [arrToFav, setArrToFav] = useState([]);\r\n    const currentSearchCityRedux = useSelector(state => {\r\n        return state.root.currentSearchCity;\r\n    });\r\n    const objCurrentWeatherRedux = useSelector(state => {\r\n        return state.root.currentWeather;\r\n    });\r\n    const renderForecastRedux = useSelector(state => {\r\n        return state.root.currentForecast;\r\n    });\r\n    const userKeySearch = useSelector(state => {\r\n        return state.root.setKeySearch;\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (localStorage.length >= 1) {\r\n            let tempCity = JSON.parse(window.localStorage.getItem(\"city\"));\r\n            setArrToFav([...tempCity]);\r\n            dispatch(actions.setCityLocal([...tempCity]));\r\n        }\r\n        if (currentSearchCityRedux) {\r\n            submit(null, currentSearchCityRedux);\r\n        } else {\r\n            defaultCity();\r\n        }\r\n\r\n    }, [])\r\n\r\n    const defaultCity = () => {\r\n        let tempURLToGetCurrentWeather = `http://dataservice.accuweather.com/currentconditions/v1/${REACT_APP_ID_SEARCH}?apikey=${REACT_APP_KEY}`;\r\n        let tempURLToGetForesast = `http://dataservice.accuweather.com/forecasts/v1/daily/5day/${REACT_APP_ID_SEARCH}?apikey=${REACT_APP_KEY}`;\r\n        const requestCurrent = axios.get(tempURLToGetCurrentWeather);\r\n        const requestForecast = axios.get(tempURLToGetForesast);\r\n        let stringDefacultCity = \"Tel Aviv\";\r\n        getAllData(requestCurrent, requestForecast, stringDefacultCity);\r\n\r\n    }\r\n    const onKeyPress = (e) => {\r\n        setSearchCity(e.target.value);\r\n        const userChoice = e.target.value;\r\n        setIsValidString(true);\r\n        if (userChoice.length > 1) {\r\n            const isValid = isValidInput(userChoice);\r\n            if (isValid) {\r\n                setIsValidString(false);\r\n                userGetCity(userChoice).then(res => {\r\n                    let arrayCity = [];\r\n                    setKeySearch(res.data[0].Key);\r\n                    dispatch(actions.setKeySearch(keySearch));\r\n                    const convert = convertObjCityToArr(res);\r\n                    arrayCity = [...convert];\r\n                    setArrayCity([...arrayCity]);\r\n                }).catch(err => console.log(err));\r\n            } else {\r\n                setIsValidString(true);\r\n            }\r\n        }\r\n    };\r\n\r\n    const isValidInput = (inputUser) => {\r\n        var pattern = new RegExp(/^[a-zA-Z0-9- ]*$/);\r\n        var hasNumber = /\\d/;\r\n        if (inputUser === \"\" || hasNumber.test(inputUser) || !pattern.test(inputUser)) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n    const userGetCity = async (userChoice) => {\r\n        const url = `http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${REACT_APP_KEY}&q=${userChoice}`;\r\n        const response = await axios(url);\r\n        return response;\r\n    }\r\n    const convertObjCityToArr = (data) => {\r\n        let result = [];\r\n        let tempArrOfNameCity = [];\r\n        for (let i = 0; i < data.data.length; i++) {\r\n            result[i] = (Object.values(data.data[i]));\r\n        }\r\n        for (let i = 0; i < result.length; i++) {\r\n            tempArrOfNameCity[i] = result[i][4];\r\n        }\r\n        return tempArrOfNameCity;\r\n    }\r\n\r\n    const submit = (e, cityName = \"\") => {\r\n        dispatch(actions.setIsToAddFavourite(false));\r\n        if (e) {\r\n            e.preventDefault();\r\n        }\r\n        let stringSearchCity = searchCity;\r\n        if (cityName) {\r\n            stringSearchCity = cityName;\r\n\r\n        }\r\n        dispatch(actions.setCurrentSearchCity(stringSearchCity));\r\n        const urlCurrent = `https://dataservice.accuweather.com/currentconditions/v1/${userKeySearch === \"\" ? REACT_APP_ID_SEARCH : parseInt(userKeySearch)}?apikey=${REACT_APP_KEY}`;\r\n        const urlForecast = `https://dataservice.accuweather.com/forecasts/v1/daily/5day/${userKeySearch === \"\" ? REACT_APP_ID_SEARCH : parseInt(userKeySearch)}?apikey=${REACT_APP_KEY}`;\r\n        const currentWeather = axios.get(urlCurrent);\r\n        const forecast = axios.get(urlForecast);\r\n        getAllData(currentWeather, forecast, stringSearchCity)\r\n        if (searchCity !== \"\") {\r\n            setSearchCity(\"\");\r\n            setIsValidString(true);\r\n        }\r\n    };\r\n    const onSave = (event, newValue) => {\r\n        setSearchCity(newValue);\r\n    };\r\n\r\n    const addToFavorite = (e) => {\r\n        e.preventDefault();\r\n        let Weather = {\r\n            ID: keySearch === undefined ? REACT_APP_ID_SEARCH : userKeySearch,\r\n            name: currentSearchCityRedux ? currentSearchCityRedux : objCurrentWeatherRedux[3],\r\n            weather: objCurrentWeatherRedux[0],\r\n            tempture: objCurrentWeatherRedux[2]\r\n        };\r\n        arrToFav.push(Weather);\r\n        dispatch(actions.setCityLocal([...arrToFav]));\r\n        dispatch(actions.setIsToAddFavourite(true));\r\n        window.localStorage.setItem(\"city\", JSON.stringify([...arrToFav]));\r\n    }\r\n\r\n\r\n    const getAllData = (currentWeather, forecast, stringCity) => {\r\n        axios.all([currentWeather, forecast]).then(axios.spread((...response) => {\r\n            const resultCurrentWeather = response[0];\r\n            const resultForecast = response[1];\r\n            if (resultCurrentWeather.data[0].WeatherIcon < 10) {\r\n                resultCurrentWeather.data[0].WeatherIcon = `0${resultCurrentWeather.data[0].WeatherIcon}`;\r\n            }\r\n            let urlIcon = `https://developer.accuweather.com/sites/default/files/${resultCurrentWeather.data[0].WeatherIcon}-s.png`;\r\n            let tempArrayCurrentCity = [];\r\n            tempArrayCurrentCity.push(resultCurrentWeather.data[0].WeatherText);\r\n            tempArrayCurrentCity.push(urlIcon);\r\n            tempArrayCurrentCity.push(resultCurrentWeather.data[0].Temperature.Metric.Value + resultCurrentWeather.data[0].Temperature.Metric.Unit);\r\n            tempArrayCurrentCity.push(stringCity === \"Tel Aviv\" ? stringCity : stringCity);\r\n\r\n            dispatch(actions.setCurrentWeather([...tempArrayCurrentCity]));\r\n            const result = resultForecast.data.DailyForecasts.map((data) => {\r\n                return {\r\n                    IconPhrase: `https://developer.accuweather.com/sites/default/files/${data.Night.Icon < 10 ? '0' + data.Night.Icon : data.Night.Icon}-s.png`,\r\n                    date: moment.utc(data.Date).format('MMMM Do YYYY'),\r\n                    temptureMin: data.Temperature.Minimum.Value + data.Temperature.Minimum.Unit,\r\n                    temptureMax: data.Temperature.Maximum.Value + \" \" + data.Temperature.Maximum.Unit,\r\n                };\r\n            });\r\n            let newArrayForecast = [];\r\n            for (let i = 0; i < 5; i++) {\r\n                newArrayForecast[i] = (Object.values(result[i]));\r\n            }\r\n            dispatch(actions.setCurrentForecast([...newArrayForecast]));\r\n        })).catch(err => console.log(err));\r\n    }\r\n    return (\r\n\r\n        <Grid container >\r\n            <AutoSearch arrayCity={arrayCity} searchCity={searchCity} onKeyPress={onKeyPress} onSave={onSave} submit={submit} validString={validString} />\r\n            <Grid container justifyContent=\"center\">\r\n                <Grid item sx={12} sm={12}>\r\n                    {<CurrentWeather objCurrentWeather={objCurrentWeatherRedux} addToFavorite={addToFavorite} />}\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container justifyContent=\"center\">\r\n                {renderForecastRedux != undefined ? renderForecastRedux.map((data, index) => (\r\n                    <Grid item xs={4} sm={2} style={{ marginLeft: \"1%\" }} key={index}>\r\n                        <Forecast data={data} key={index} />\r\n                    </Grid>\r\n                )) : null}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Display\r\n\r\n\r\n","import { Grid } from '@material-ui/core'\r\nimport React from 'react'\r\nimport Display from './components/Display/Display';\r\n\r\nfunction Dashboard() {\r\n    return (\r\n        <Grid container >\r\n            <Grid item xs>\r\n                <Display />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import { Grid } from '@material-ui/core'\r\nimport React from 'react'\r\nimport Dashboard from './Dashboard/Dashboard';\r\n\r\nfunction Main() {\r\n\r\n    return (\r\n        <Grid container justifyContent=\"center\">\r\n            <Grid item>\r\n                <Dashboard />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport { Grid } from '@material-ui/core';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as actions from '../../../../redux/actions';\r\nimport styles from \"./Styles/mystyle.module.css\";\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: \"fit-content\",\r\n        marginTop: \"10%\",\r\n    },\r\n    link: {\r\n        textDecoration: \"none\"\r\n    },\r\n    btnsGrid: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\"\r\n    },\r\n    btn: {\r\n        marginLeft: \"2%\",\r\n    },\r\n    headline: {\r\n        fontSize: \"20px\",\r\n        fontFamily: \"serif\"\r\n    },\r\n    typography: {\r\n        fontFamily: \"serif\",\r\n        fontSize: \"17px\"\r\n    }\r\n\r\n});\r\n\r\nfunction FavouriteCity(props) {\r\n\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const deleteCity = (e) => {\r\n        e.preventDefault();\r\n        const idToDelete = parseInt(e.target.attributes.getNamedItem(\"data-id\").value);\r\n        let arrTemp = JSON.parse(window.localStorage.getItem(\"city\"));\r\n        arrTemp.splice(idToDelete, 1);\r\n        window.localStorage.setItem(\"city\", JSON.stringify(arrTemp));\r\n        dispatch(actions.setCityLocal([...arrTemp]));\r\n    }\r\n    const setCity = () => {\r\n        dispatch(actions.setCurrentSearchCity(props.objLocal.name));\r\n        dispatch(actions.setKeySearch(props.objLocal.ID));\r\n        dispatch(actions.setIsToAddFavourite(false));\r\n    }\r\n    return (\r\n\r\n        <Grid item xs={12} sm={6}>\r\n            <Card className={classes.root}  >\r\n                <CardActionArea>\r\n                    <CardContent >\r\n                        <Typography gutterBottom className={classes.headline} >\r\n                            <strong> Current City:</strong>\r\n                            <Typography >\r\n                                {props.objLocal.name}\r\n                            </Typography>\r\n                        </Typography>\r\n                        <Typography className={classes.typography}>\r\n                            <strong> Current Weather:</strong><Typography>\r\n                                {props.objLocal.weather}\r\n                            </Typography>\r\n                        </Typography>\r\n                        <Typography className={classes.typography}>\r\n                            <strong> Degree:</strong>\r\n                            <Typography>\r\n                                {props.objLocal.tempture}\r\n                            </Typography>\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n                <Grid item className={classes.btnsGrid}>\r\n                    <button onClick={deleteCity} className={styles.button4} data-id={props.index}>Delete</button>\r\n                    <Link to=\"/\" className={classes.link} >\r\n                        <button onClick={setCity} className={styles.button5}>Main Page</button>\r\n                    </Link>\r\n                </Grid>\r\n            </Card>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default FavouriteCity\r\n","import React, { useEffect, useState } from 'react'\r\nimport FavouriteCity from './Dashboard/components/FavouriteCity/FavouriteCity';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as actions from '../redux/actions';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        marginTop: \"2%\"\r\n    },\r\n    title: {\r\n        color: \"#306F8C\",\r\n        fontFamily: 'Raleway',\r\n        fontSize: \"35px\",\r\n        fontFeight: \"800\",\r\n        lineHeight: \"72px\",\r\n        margin: \"0 0 24px\",\r\n        textTransform: \"uppercase\"\r\n    },\r\n    div: {\r\n        marginTop: \"5%\",\r\n        display: \"flex\",\r\n        marginRight: \"13%\",\r\n        marginLeft: \"2%\",\r\n    },\r\n    messageContainer: {\r\n        justifyContent: \"center\"\r\n    },\r\n    message: {\r\n        marginTop: \"10%\"\r\n    }\r\n\r\n});\r\nfunction Favourite() {\r\n\r\n    const classes = useStyles();\r\n    const localStorageArrayCity = useSelector(state => {\r\n        return state.root.localStorageArrayCity;\r\n    });\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        if (localStorage.length > 0) {\r\n            let tempCity = JSON.parse(window.localStorage.getItem(\"city\"));\r\n            dispatch(actions.setCityLocal([...tempCity]));\r\n        }\r\n\r\n    }, [])\r\n    return (\r\n        <Grid container>\r\n            <Grid container justifyContent=\"center\" className={classes.root}>\r\n                <Grid item >\r\n                    <Typography variant=\"h6\" color=\"primary\" className={classes.title}>\r\n                        Welcome to Favourite Page\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            {localStorageArrayCity.map((objLocal, index) => (\r\n                <Grid item xs={4} sm={3} className={classes.div}>\r\n                    <FavouriteCity objLocal={objLocal} index={index} style={{ marginLeft: \"14%\", }} /> </Grid>\r\n            ))}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Favourite\r\n","import { Grid } from \"@material-ui/core\";\nimport { BrowserRouter as Router, Route, Switch as SwitchRouter, Redirect } from \"react-router-dom\";\nimport NavigationBar from \"./components/Navigation/NavigationBar\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Main from \"./components/Main\";\nimport Favourite from \"./components/Favourite\";\nimport React, { useState } from 'react'\nimport \"./App.css\";\n\nconst useStyles = makeStyles({\n  rootNav: {\n    backgroundColor: \"#306F8C\",\n  },\n  grey: {\n    backgroundColor: \"#e3e3e3\",\n    height: \"110vh\",\n  },\n  black: {\n    backgroundColor: \"black\",\n    height: \"110vh\",\n  }\n});\n\nfunction App() {\n\n  const classes = useStyles();\n  const [checked, setChecked] = useState(false);\n\n  const handleChange = () => {\n    setChecked((prev) => !prev);\n  };\n\n  return (\n    <div className=\"App\" >\n      <div className={!checked ? classes.grey : classes.black} >\n        <Grid item xs={12} >\n          <Router>\n            <Grid container className={classes.rootNav} >\n              <NavigationBar handleChange={handleChange} checked={checked} />\n            </Grid>\n            <SwitchRouter>\n              <Redirect from=\"/Philip-Kouchner-07-20-2021\" to=\"/\" />\n              <Route exact path=\"/\">\n                <Main />\n              </Route>\n              <Route path=\"/favorite\">\n                <Favourite />\n              </Route>\n            </SwitchRouter>\n          </Router>\n        </Grid>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actions from '../constants';\r\n\r\nconst initialState = {\r\n    currentWeather: [],\r\n    currentForecast: [],\r\n    localStorageArrayCity: [],\r\n    currentSearchCity: \"\",\r\n    isToAddFavourite: false,\r\n    setKeySearch: \"\",\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actions.SET_CURRENT_WEATHER: {\r\n            return {\r\n                ...state,\r\n                currentWeather: action.payload\r\n            }\r\n\r\n        }\r\n        case actions.SET_CURRENT_FORECAST: {\r\n            return {\r\n                ...state,\r\n                currentForecast: action.payload\r\n            }\r\n\r\n        }\r\n        case actions.DELETE_CITY: {\r\n            return {\r\n                ...state,\r\n                localStorageArrayCity: action.payload\r\n            }\r\n\r\n        }\r\n        case actions.CURRENT_SEARCH_CITY: {\r\n            return {\r\n                ...state,\r\n                currentSearchCity: action.payload\r\n            }\r\n\r\n        }\r\n        case actions.IS_TO_ADD_FAVOURITE: {\r\n            return {\r\n                ...state,\r\n                isToAddFavourite: action.payload\r\n            }\r\n\r\n        }\r\n        case actions.SET_KEY_SEARCH: {\r\n            return {\r\n                ...state,\r\n                setKeySearch: action.payload\r\n            }\r\n\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import { combineReducers } from 'redux';\r\nimport rootReducer from './root';\r\n// import userReducer from './user';\r\n\r\nconst reducers = combineReducers({\r\n    root: rootReducer,\r\n    // user: userReducer\r\n});\r\n\r\nexport default reducers;","import { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport reducers from './reducers';\r\n\r\nconst configureStore = () => {\r\n    const store = createStore(reducers, composeWithDevTools());\r\n    return store;\r\n}\r\n\r\nexport default configureStore();","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button4\":\"mystyle_button4__2bbY8\",\"button5\":\"mystyle_button5__3GXFY\"};"],"sourceRoot":""}